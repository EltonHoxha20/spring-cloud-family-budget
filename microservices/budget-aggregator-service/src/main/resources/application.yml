springdoc:
  swagger-ui.path: /openapi/swagger-ui.html
  api-docs.path: /openapi/v3/api-docs
  packagesToScan: al.codepie.microservices.aggregator.budget
  pathsToMatch: /**

api:

  common:
    version: 1.0.0
    title: Budget Aggregator API
    description: Description of the Budget Aggregator API...
    termsOfService: MY TERMS OF SERVICE
    license: MY LICENSE
    licenseUrl: MY LICENSE URL

    externalDocDesc: MY WIKI PAGE
    externalDocUrl: MY WIKI URL
    contact:
      name: NAME OF CONTACT
      url: URL TO CONTACT
      email: contact@mail.com

  responseCodes:
    ok.description: OK
    badRequest.description: Bad Request, invalid format of the request. See response message for more information
    notFound.description: Not found, the specified id does not exist
    unprocessableEntity.description: Unprocessable entity, input parameters caused the processing to fail. See response message for more information

  budget-aggregate:
    get-budget-aggregate:
      description: Returns a budget aggregate
      notes: |
        # Normal response
        If the requested budget item id, budget type, and budget expense is found within the range of date from and date to,the method will return information regarding:
        1. Budget aggregate information
        1. Service Addresses\n(technical information regarding the addresses of the microservices that created the response)

        # Expected error responses
        1. If no budget item, budget type or budget expense information is found, a **404 - Not Found** error will be returned        

server:
  port: 7000
  error:
    include-message: always

app:
  budget-type-service:
    host: localhost
    port: 7003
  budget-item-service:
    host: localhost
    port: 7002
  budget-expense-service:
    host: localhost
    port: 7001

logging:
  level:
    root: INFO
    al.codepie: DEBUG

---
spring:
  config:
    activate:
      on-profile: docker

server:
  port: 8080

app:
  budget-type-service:
    host: budget-type
    port: 8080
  budget-item-service:
    host: budget-item
    port: 8080
  budget-expense-service:
    host: budget-expense
    port: 8080