springdoc:
  swagger-ui.path: /openapi/swagger-ui.html
  api-docs.path: /openapi/v3/api-docs
  packagesToScan: al.codepie.microservices.core.budgetitem
  pathsToMatch: /**

api:

  common:
    version: 1.0.0
    title: Budget Item API
    description: Description of the Budget Item API...
    termsOfService: MY TERMS OF SERVICE
    license: MY LICENSE
    licenseUrl: MY LICENSE URL

    externalDocDesc: MY WIKI PAGE
    externalDocUrl: MY WIKI URL
    contact:
      name: NAME OF CONTACT
      url: URL TO CONTACT
      email: contact@mail.com

  responseCodes:
    ok.description: OK
    badRequest.description: Bad Request, invalid format of the request. See response message for more information
    notFound.description: Not found, the specified id does not exist
    unprocessableEntity.description: Unprocessable entity, input parameters caused the processing to fail. See response message for more information

  budget-item:
    create-budget-item:
      description: Creates a budget item
      notes: |
        # Normal response
        The budget item information posted to the API.

        # Expected error responses
        1. If a budget item with the same Id as specified in the posted information already exists,
           an **422 - Unprocessable Entity** error with a "duplicate key" error message will be returned

    update-budget-item:
      description: Updates a budget item
      notes: |
        # Normal response
        The budget item information posted to the API.

        # Expected error responses
        1. If a budget item with the same Id as specified in the posted information already exists,
           an **422 - Unprocessable Entity** error with a "duplicate key" error message will be returned
        1. If no budget item information is found, a **404 - Not Found** error will be returned

    get-budget-item:
      description: Returns a budget item
      notes: |
        # Normal response
        If the requested budget item id is found the method will return information regarding:
        1. Budget item information
        1. Service Addresses\n(technical information regarding the addresses of the microservices that created the response)

        # Expected error responses
        1. If no budget item information is found, a **404 - Not Found** error will be returned        

    delete-budget-item:
      description: Deletes a budget item
      notes: |
        # Normal response
        Budget item with the specified budgetItemId will be deleted.
        The implementation of the delete method is idempotent, i.e. it can be called several times with the same response.

        This means that a delete request of a non-existing budget item will return **200 Ok**.

    create-budget-sub-item:
      description: Creates a budget sub item
      notes: |
        # Normal response
        The budget sub item information posted to the API.

        # Expected error responses
        1. If a budget sub item with the same Id as specified in the posted information already exists,
           an **422 - Unprocessable Entity** error with a "duplicate key" error message will be returned

    update-budget-sub-item:
      description: Updates a budget sub item
      notes: |
        # Normal response
        The budget sub item information posted to the API.

        # Expected error responses
        1. If a budget sub item with the same Id as specified in the posted information already exists,
           an **422 - Unprocessable Entity** error with a "duplicate key" error message will be returned
        1. If no budget sub item information is found, a **404 - Not Found** error will be returned

    get-budget-sub-item:
      description: Returns a budget sub item
      notes: |
        # Normal response
        If the requested budget sub item id is found the method will return information regarding:
        1. Budget sub item information
        1. Service Addresses\n(technical information regarding the addresses of the microservices that created the response)

        # Expected error responses
        1. If no budget sub item information is found, a **404 - Not Found** error will be returned        

    delete-budget-sub-item:
      description: Deletes a budget sub item
      notes: |
        # Normal response
        Budget item with the specified budgetItemId will be deleted.
        The implementation of the delete method is idempotent, i.e. it can be called several times with the same response.

        This means that a delete request of a non-existing budget sub item will return **200 Ok**.

    get-budget-sub-items-by-item:
      description: Returns a list of budget sub items
      notes: |
        # Normal response
        If the requested budget item id is found the method will return information regarding:
        1. List of Budget sub item information

        # Expected error responses
        1. If no budget sub items information is found, a **404 - Not Found** error will be returned           


server:
  port: 7002
  error:
    include-message: always

# Strongly recommended to set this property to "none" in a production environment!
spring:
  jpa:
    hibernate:
      ddl-auto: update
  datasource:
    url: jdbc:mysql://localhost/budget-item-db
    username: user
    password: pwd
    hikari:
      initialization-fail-timeout: 60000

logging:
  level:
    root: INFO
    al.codepie: DEBUG
    org.hibernate.SQL: DEBUG
    org.hibernate.type.descriptor.sql.BasicBinder: TRACE

---
server:
  port: 8080

spring:
  config:
    activate:
      on-profile: docker
  datasource:
    url: jdbc:mysql://mysql_budget_item/budget-item-db



